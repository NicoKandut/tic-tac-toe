{"version":3,"sources":["../node_modules/peerjs/dist sync","components/common/theme.ts","components/common/FlexColumn.tsx","components/layout/Header.tsx","components/layout/Footer.tsx","main/Player.ts","main/invite.ts","main/useQuery.ts","components/pages/Welcome.tsx","main/gameLogic.ts","main/usePeerConnection.ts","components/Mark.tsx","components/Tile.tsx","components/Board.tsx","components/History.tsx","components/common/FlexRow.tsx","components/Game.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","theme","gap","red","blue","yellow","semiRed","semiBlue","semiYellow","styled","div","Header","FooterGrid","footer","FooterItem","Footer","href","Player","stringify","invite","btoa","roomId","playerId","inverseOf","player","O","X","useRawInvite","URLSearchParams","useLocation","search","get","useInvite","atob","split","parse","Welcome","to","Date","getTime","toString","substr","replace","checkRow","index","tiles","checkTriplet","slice","checkColumn","filter","_","i","triplet","every","tile","NONE","getPeerId","Mark","type","xmlns","viewBox","className","x1","y1","x2","y2","strokeWidth","cx","cy","r","Tile","mark","processTurn","onClick","useCallback","Board","winner","map","History","games","scrollRef","useRef","useEffect","current","scrollLeft","scrollWidth","ref","length","ScoreRow","FlexRow","Game","useState","Array","fill","setTiles","setGames","setWinner","setPlayer","connection","setConnection","peer","Peer","on","err","console","error","destination","conn","connect","destroy","usePeerConnection","doNotSend","newTiles","splice","h","v","getWinner","send","doTurn","reset","processControl","instruction","processReset","score","useMemo","reduce","result","handler","data","off","selectLink","event","document","createRange","selectNodeContents","target","sel","window","getSelection","removeAllRanges","addRange","FlexColumn","location","host","process","AppFlexColumn","App","basename","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5612aff4.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 42;","const theme = {\r\n  gap: \"20px\",\r\n  red: \"tomato\",\r\n  blue: \"cornflowerblue\",\r\n  yellow: \"gold\",\r\n  semiRed: \"rgba(255, 150, 131, 0.6)\",\r\n  semiBlue: \"rgba(150, 187, 255, 0.6)\",\r\n  semiYellow: \"rgba(255, 236, 131, 0.4)\",\r\n};\r\n\r\nexport default theme;\r\n","import styled from \"styled-components\";\r\nimport theme from \"./theme\";\r\n\r\nexport default styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100%;\r\n  gap: ${theme.gap};\r\n`;\r\n","import React from \"react\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header>\r\n      <h1>Tic Tac Toe React App</h1>\r\n      <nav></nav>\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport theme from \"../common/theme\";\r\nimport { FaCodeBranch, FaGithub, FaPen } from \"react-icons/fa\";\r\n\r\nconst FooterGrid = styled.footer`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 5px;\r\n  margin-bottom: ${theme.gap};\r\n  color: lightgray;\r\n\r\n  div {\r\n    transition: color 0.2s linear;\r\n    color: lightgray;\r\n\r\n    :hover {\r\n      color: teal;\r\n    }\r\n  }\r\n\r\n  a {\r\n    color: lightgray;\r\n    text-decoration: none;\r\n\r\n    :visited {\r\n      color: lightgray;\r\n    }\r\n\r\n    :hover {\r\n      color: teal;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FooterItem = styled.div`\r\n  display: flex;\r\n  gap: 5px;\r\n\r\n  :nth-of-type(odd) {\r\n    flex-direction: row;\r\n  }\r\n\r\n  :nth-of-type(even) {\r\n    flex-direction: row-reverse;\r\n  }\r\n`;\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <FooterGrid>\r\n      <FooterItem>\r\n        <FaPen />\r\n        <span>Nico Kandut</span>\r\n      </FooterItem>\r\n      <FooterItem>\r\n        <FaCodeBranch />\r\n        <span>0.1.6</span>\r\n      </FooterItem>\r\n      <FooterItem>\r\n        <FaGithub />\r\n        <a href=\"https://github.com/NicoKandut/tic-tac-toe\">Repository</a>\r\n      </FooterItem>\r\n    </FooterGrid>\r\n  );\r\n}\r\n","enum Player {\r\n  NONE = \"none\",\r\n  X = \"x\",\r\n  O = \"o\",\r\n}\r\n\r\nexport function inverseOf(player: Player) {\r\n  if (player === Player.O) {\r\n    return Player.X;\r\n  }\r\n  if (player === Player.X) {\r\n    return Player.O;\r\n  }\r\n\r\n  throw new Error(`Cannot find inverse of ${player}`);\r\n}\r\n\r\nexport default Player;\r\n","import Player from \"./Player\";\r\n\r\nexport interface Invite {\r\n  roomId: string;\r\n  playerId: Player;\r\n}\r\n\r\nexport function parse(invite: string): Invite {\r\n  const [roomId, playerId] = atob(invite).split(\":\");\r\n\r\n  return {\r\n    roomId,\r\n    playerId: playerId as Player,\r\n  };\r\n}\r\n\r\nexport function stringify(invite: Invite) {\r\n  return btoa(`${invite.roomId}:${invite.playerId}`);\r\n}\r\n","import { useLocation } from \"react-router-dom\";\r\nimport { Invite, parse } from \"./invite\";\r\n\r\nexport function useRawInvite() {\r\n  const query = new URLSearchParams(useLocation().search);\r\n  return query.get(\"i\") as string;\r\n}\r\n\r\nexport default function useInvite(): Invite {\r\n  return parse(useRawInvite());\r\n}\r\n","import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { stringify } from \"../../main/invite\";\r\nimport Player from \"../../main/Player\";\r\nimport { useRawInvite } from \"../../main/useQuery\";\r\n\r\nfunction generateRoomId() {\r\n  return btoa(new Date().getTime().toString().substr(6)).replace(/=+/, \"\");\r\n}\r\n\r\nexport default function Welcome() {\r\n  const invite = useRawInvite();\r\n\r\n  return (\r\n    <main>\r\n      {invite && <Redirect to={`/versus?i=${invite}`} />}\r\n      <span>Create a game: </span>\r\n      <Link\r\n        to={`/versus?i=${stringify({\r\n          roomId: generateRoomId(),\r\n          playerId: Player.X,\r\n        })}`}\r\n      >\r\n        New Game\r\n      </Link>\r\n    </main>\r\n  );\r\n}\r\n","import Player from \"./Player\";\r\n\r\ntype RowIndex = 0 | 1 | 2;\r\ntype ColumnIndex = 0 | 1 | 2;\r\n\r\n/**\r\n * Checks a row for matching marks.\r\n */\r\nexport function checkRow(index: RowIndex, tiles: Array<Player>): Player | null {\r\n  return checkTriplet(tiles.slice(index * 3, (index + 1) * 3));\r\n}\r\n\r\n/**\r\n * Checks a column for matching marks.\r\n */\r\nexport function checkColumn(\r\n  index: ColumnIndex,\r\n  tiles: Array<Player>\r\n): Player | null {\r\n  return checkTriplet(tiles.filter((_, i) => i % 3 === index));\r\n}\r\n\r\nexport function checkTriplet(triplet: Array<Player>) {\r\n  if (triplet.every((tile) => tile !== Player.NONE && tile === triplet[0])) {\r\n    return triplet[0];\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function getWinner(tiles: Array<Player>): Player | null {\r\n  for (let i = 0; i < 3; i++) {\r\n    const h = checkRow(i as RowIndex, tiles);\r\n    if (h) return h;\r\n\r\n    const v = checkColumn(i as ColumnIndex, tiles);\r\n    if (v) return v;\r\n  }\r\n\r\n  const d =\r\n    checkTriplet([tiles[0], tiles[4], tiles[8]]) ||\r\n    checkTriplet([tiles[2], tiles[4], tiles[6]]);\r\n  if (d) return d;\r\n\r\n  const full = tiles.every((tile) => tile !== Player.NONE);\r\n  if (full) return Player.NONE;\r\n\r\n  return null;\r\n}\r\n","import Peer, { DataConnection } from \"peerjs\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Player, { inverseOf } from \"./Player\";\r\n\r\nconst ID_PREFIX = \"haleluni-ttt-\";\r\n\r\nfunction getPeerId(roomId: string, playerId: Player) {\r\n  return ID_PREFIX + roomId + playerId;\r\n}\r\n\r\nexport default function usePeerConnection(\r\n  roomId: string,\r\n  playerId: Player\r\n): DataConnection | null {\r\n  const [connection, setConnection] = useState<DataConnection | null>(null);\r\n\r\n  useEffect(() => {\r\n    const peer = new Peer(getPeerId(roomId, playerId));\r\n\r\n    peer.on(\"error\", (err) => {\r\n      console.error(\"ERROR:\", err);\r\n    });\r\n\r\n    // O is the second player. Once they accept the invite they take care of connecting to X.\r\n    if (playerId === Player.O) {\r\n      peer.on(\"open\", () => {\r\n        const destination = getPeerId(roomId, inverseOf(playerId));\r\n        const conn = peer.connect(destination);\r\n        setConnection(conn);\r\n      });\r\n    }\r\n\r\n    // X will get the connection attempt from O and expose the connection as well\r\n    else {\r\n      peer.on(\"connection\", (conn) => {\r\n        setConnection(conn);\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      peer.destroy();\r\n    };\r\n  }, [playerId, roomId]);\r\n\r\n  return connection;\r\n}\r\n","import React from \"react\";\r\nimport Player from \"../main/Player\";\r\nimport \"./Mark.css\";\r\n\r\nexport default function Mark({ type }: { type: Player }) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 12 12\"\r\n      className={`mark ${type}`}\r\n    >\r\n      {type === Player.X ? (\r\n        <>\r\n          <g className=\"shadow\">\r\n            <line x1=\"2\" y1=\"2.5\" x2=\"10\" y2=\"10.5\" strokeWidth=\"2\" />\r\n            <line x1=\"2\" y1=\"10.5\" x2=\"10\" y2=\"2.5\" strokeWidth=\"2\" />\r\n          </g>\r\n          <g className=\"shape\">\r\n            <line x1=\"2\" y1=\"2\" x2=\"10\" y2=\"10\" strokeWidth=\"2\" />\r\n            <line x1=\"2\" y1=\"10\" x2=\"10\" y2=\"2\" strokeWidth=\"2\" />\r\n          </g>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <g className=\"shadow\">\r\n            <circle cx=\"6\" cy=\"6.5\" r=\"4\" strokeWidth=\"2\" />\r\n          </g>\r\n          <g className=\"shape\">\r\n            <circle cx=\"6\" cy=\"6\" r=\"4\" strokeWidth=\"2\" />\r\n          </g>\r\n        </>\r\n      )}\r\n    </svg>\r\n  );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport Player from \"../main/Player\";\r\nimport Mark from \"./Mark\";\r\nimport \"./Tile.css\";\r\n\r\nexport default function Tile({\r\n  mark,\r\n  index,\r\n  processTurn,\r\n}: {\r\n  mark: Player;\r\n  index: number;\r\n  processTurn: (index: number, doNotSend: boolean | undefined) => void;\r\n}) {\r\n  const onClick = useCallback(() => {\r\n    if (mark === Player.NONE) {\r\n      processTurn(index, false);\r\n    }\r\n  }, [index, mark, processTurn]);\r\n\r\n  return (\r\n    <div className=\"tile\" onClick={onClick}>\r\n      {mark !== Player.NONE && <Mark type={mark} />}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Player from \"../main/Player\";\r\nimport Tile from \"./Tile\";\r\nimport \"./Board.css\";\r\nimport Mark from \"./Mark\";\r\n\r\nexport default function Board({\r\n  tiles,\r\n  processTurn,\r\n  winner,\r\n}: {\r\n  tiles: Player[];\r\n  processTurn: (index: number, doNotSend: boolean | undefined) => void;\r\n  winner: Player | null;\r\n}) {\r\n  return (\r\n    <div className=\"board-wrapper\">\r\n      <div className=\"board\">\r\n        {tiles.map((tile, index) => (\r\n          <Tile\r\n            key={index}\r\n            mark={tile}\r\n            index={index}\r\n            processTurn={processTurn}\r\n          />\r\n        ))}\r\n      </div>\r\n      {winner && (\r\n        <div className={`endscreen ${winner}`}>\r\n          {winner === Player.NONE ? (\r\n            <span className=\"draw\">Draw</span>\r\n          ) : (\r\n            <Mark type={winner} />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport Player from \"../main/Player\";\r\nimport Board from \"./Board\";\r\n\r\nexport default function History({ games }: { games: [Player, Player[]][] }) {\r\n  const scrollRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (scrollRef && scrollRef.current) {\r\n      scrollRef.current.scrollLeft = scrollRef?.current?.scrollWidth;\r\n    }\r\n  }, [games]);\r\n\r\n  return (\r\n    <div className=\"history\" ref={scrollRef}>\r\n      {games.length > 0 ? (\r\n        games.map(([winner, tiles], index) => (\r\n          <div key={index}>\r\n            <span></span>\r\n            <Board tiles={tiles} winner={winner} processTurn={() => {}} />\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <div className=\"no-matches\">\r\n          <span>No matches played yet...</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport theme from \"./theme\";\r\n\r\nexport default styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  gap: ${theme.gap};\r\n`;\r\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\n\r\nimport { getWinner } from \"../main/gameLogic\";\r\nimport Instruction, { ControlInstruction } from \"../main/Instruction\";\r\nimport { stringify } from \"../main/invite\";\r\nimport Player, { inverseOf } from \"../main/Player\";\r\nimport usePeerConnection from \"../main/usePeerConnection\";\r\nimport useInvite from \"../main/useQuery\";\r\nimport Board from \"./Board\";\r\nimport FlexColumn from \"./common/FlexColumn\";\r\nimport History from \"./History\";\r\nimport \"./Game.css\";\r\nimport FlexRow from \"./common/FlexRow\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ScoreRow = styled(FlexRow)`\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport default function Game() {\r\n  const { roomId, playerId } = useInvite();\r\n  const [tiles, setTiles] = useState(new Array<Player>(9).fill(Player.NONE));\r\n  const [games, setGames] = useState(new Array<[Player, Array<Player>]>());\r\n  const [winner, setWinner] = useState<Player | null>(null);\r\n  const [player, setPlayer] = useState(Player.X);\r\n  const connection = usePeerConnection(roomId, playerId);\r\n\r\n  const processTurn = useCallback(\r\n    (index, doNotSend: boolean | undefined) => {\r\n      const newTiles = tiles;\r\n      newTiles.splice(index, 1, player);\r\n      setTiles(newTiles);\r\n      setPlayer(inverseOf(player));\r\n\r\n      const winner = getWinner(tiles);\r\n      setWinner(winner);\r\n\r\n      if (!doNotSend) {\r\n        connection?.send(index);\r\n      }\r\n    },\r\n    [connection, player, tiles]\r\n  );\r\n\r\n  const doTurn = useCallback(\r\n    (index: number, doNotSend: boolean | undefined) => {\r\n      if (player === playerId) {\r\n        processTurn(index, doNotSend);\r\n      }\r\n    },\r\n    [player, playerId, processTurn]\r\n  );\r\n\r\n  const reset = useCallback(() => {\r\n    if (winner) {\r\n      setGames([...games, [winner, tiles.map((tile) => tile)]]);\r\n      setTiles(new Array<Player>(9).fill(Player.NONE));\r\n      setWinner(null);\r\n    }\r\n  }, [games, tiles, winner]);\r\n\r\n  const processControl = useCallback(\r\n    (instruction: ControlInstruction, doNotSend: boolean | undefined) => {\r\n      if (instruction === \"reset\") {\r\n        reset();\r\n      }\r\n\r\n      if (!doNotSend) {\r\n        connection?.send(instruction);\r\n      }\r\n    },\r\n    [connection, reset]\r\n  );\r\n\r\n  const processReset = useCallback(() => {\r\n    processControl(\"reset\", false);\r\n  }, [processControl]);\r\n\r\n  const score = useMemo(() => {\r\n    return games.reduce(\r\n      (result, [winner]) => {\r\n        result[winner] = result[winner] + 1;\r\n        return result;\r\n      },\r\n      {\r\n        [Player.X]: 0,\r\n        [Player.O]: 0,\r\n        [Player.NONE]: 0,\r\n      }\r\n    );\r\n  }, [games]);\r\n\r\n  useEffect(() => {\r\n    const conn = connection;\r\n\r\n    const handler = (data: Instruction) => {\r\n      if (typeof data === \"number\") processTurn(data, true);\r\n      else if (typeof data === \"string\") processControl(data, true);\r\n    };\r\n\r\n    conn?.on(\"data\", handler);\r\n\r\n    return () => conn?.off(\"data\", handler);\r\n  }, [connection, processControl, processTurn]);\r\n\r\n  const selectLink = useCallback((event) => {\r\n    var r = document.createRange();\r\n    r.selectNodeContents(event.target as Node);\r\n    var sel = window.getSelection();\r\n    if (sel) {\r\n      sel.removeAllRanges();\r\n      sel.addRange(r);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <FlexColumn className=\"game\">\r\n      <History games={games} />\r\n      <div>\r\n        {connection ? (\r\n          <span className=\"connected\">Connected</span>\r\n        ) : (\r\n          <>\r\n            <span className=\"invite\">Invite link: </span>\r\n            <code onClick={selectLink}>{`${\r\n              window.location.host + process.env.PUBLIC_URL\r\n            }?i=${stringify({ roomId, playerId: inverseOf(playerId) })}`}</code>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <main className=\"board-container\">\r\n        <ScoreRow>\r\n          {}\r\n          <div className=\"turn\">\r\n            {winner ? (\r\n              <span className={winner}>\r\n                {winner === Player.NONE\r\n                  ? \"Draw\"\r\n                  : winner === playerId\r\n                  ? \"You win\"\r\n                  : \"You lose\"}\r\n              </span>\r\n            ) : (\r\n              <span className={player}>\r\n                {player === playerId ? \"Your turn\" : \"Opponent's turn\"}\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div className=\"score\">\r\n            <span className=\"x\">{score[Player.X]}</span>\r\n            <span>-</span>\r\n            <span className=\"o\">{score[Player.O]}</span>\r\n          </div>\r\n        </ScoreRow>\r\n        <Board tiles={tiles} winner={winner} processTurn={doTurn} />\r\n        {winner && (\r\n          <button className=\"continue\" onClick={processReset}>\r\n            Again\r\n          </button>\r\n        )}\r\n      </main>\r\n    </FlexColumn>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport FlexColumn from \"./components/common/FlexColumn\";\nimport styled from \"styled-components\";\nimport Header from \"./components/layout/Header\";\nimport Footer from \"./components/layout/Footer\";\nimport Welcome from \"./components/pages/Welcome\";\nimport Game from \"./components/Game\";\nimport theme from \"./components/common/theme\";\n\nconst AppFlexColumn = styled(FlexColumn)`\n  > * {\n    width: 100%;\n    max-width: 1000px;\n    padding: ${theme.gap};\n  }\n`;\n\nfunction App() {\n  return (\n    <AppFlexColumn>\n      <Header />\n      <Router basename=\"/tic-tac-toe\">\n        <Switch>\n          <Route path={`/versus`}>\n            <Game />\n          </Route>\n          <Route path={`/`}>\n            <Welcome />\n          </Route>\n        </Switch>\n      </Router>\n      <Footer />\n    </AppFlexColumn>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}